# DDoS Limiting requests rate
limit_req_zone $binary_remote_addr zone=one:1m rate=30r/m;

# DDOS Limiting the Number of Connections
limit_conn_zone $binary_remote_addr zone=two:1m;

server {
    listen 80;
     server_name aggregate.apple.server;
     return 301 https://$host$request_uri;
 }

 server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name  aggregate.apple.server;

    # Timeout + DDoS
    client_body_timeout 3s;
    client_header_timeout 3s;

    # Limit requests size
    client_body_buffer_size 200K;
    client_header_buffer_size 2k;
    client_max_body_size 200k;
    large_client_header_buffers 3 1k;

   server_tokens off;

    add_header X-Frame-Options "SAMEORIGIN";

   # HTTP only secure.
    proxy_cookie_path / "/; Secure";


    location / {

        proxy_intercept_errors on;
        error_page 400 404 = @404errors;
        error_page 500 502 503 504 = @500errors;

        limit_except GET POST DELETE PUT { deny  all; }

        proxy_pass http://server:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        add_header test "yes-yes";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Strict-Transport-Security: max-age=31536000;
        add_header Access-Control-Allow-Origin "https://aggregate.apple.server";
        add_header Content-Security-Policy "default-src *  data: blob: filesystem: about: ws: wss: 'unsafe-inline' 'unsafe-eval' 'unsafe-dynamic'; script-src * data: blob: 'unsafe-inline' 'unsafe-eval'; connect-src * data: blob: 'unsafe-inline'; img-src * data: blob: 'unsafe-inline'; frame-src * data: blob: ; style-src * data: blob: 'unsafe-inline'; font-src * data: blob: 'unsafe-inline';";
    }

    location @404errors {
      root /404.html;
    }


     location @500errors {
       root /50x.html;
     }

    ssl_certificate /root/certs/auth+4.pem;
    ssl_certificate_key /root/certs/auth+4-key.pem;

}